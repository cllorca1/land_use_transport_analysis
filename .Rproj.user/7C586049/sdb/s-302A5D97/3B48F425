{
    "collab_server" : "",
    "contents" : "pacman::p_load(data.table, dplyr, ggplot2)\n\nanalyze_sp = function(output_path, subpath, scenario_name){\npath = \"C:/models/silo/muc/microData/\"\n\n\n#read 2011 files\npp11 = fread(paste(path,\"pp_2011.csv\",sep = \"\"))\njj11 = fread(paste(path,\"jj_2011.csv\", sep = \"\"))\n\n#read 2050 files\npp50 = fread(paste(path,\"futureYears/pp_2050.csv\", sep = \"\"))\njj50 = fread(paste(path,\"futureYears/jj_2050.csv\", sep = \"\"))\nhh50 = fread(paste(path,\"futureYears/hh_2050.csv\", sep = \"\"))\n\n\n#populationByCounty ----- \n\n\npp11 = merge(pp11, zonesWithRegionName, by.x = \"homeZone\", by.y = \"zone\")\naux = hh50 %>% select(id, homeZone = zone)\naux = merge(pp50, aux, by.x = \"hhID\", by.y = \"id\")\naux = merge(aux, zonesWithRegionName, by.x = \"homeZone\", by.y = \"zone\")\n\nsummary11 = pp11 %>% group_by(region = work_region_name) %>% summarize(count = n())\nsummary50 = aux %>% group_by(region = work_region_name) %>% summarize(count = n())\n\nsummary11$year = 2011\nsummary50$year = 2050\n\nplot1 = ggplot(rbind(summary11, summary50), aes(y=count, x = region, group = as.factor(year)\n                                        , fill = as.factor(year))) +\n  geom_bar(stat = \"identity\", position=position_dodge()) + \n  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + \n  xlab(\"Home region\") + ylab(\"Persons\") + labs(fill = \"Year\") + \n  theme(legend.position = \"bottom\")\nprint(plot1)\nggsave(file = paste(output_path,\"pp_\",scenario_name,\".png\", sep = \"\"),\n       plot =  plot1, height = 15, width = 10, units = \"cm\" )\n\n\n#workers by county-------\n\n#2011: filter to workers \nworkers11 = pp11 %>% filter(workplace>0)\n\n#merge pp and jj to get workzones of persons\nworkersjj11 = merge(x = workers11, y = jj11, by.x=\"workplace\", by.y = \"id\")\n\n#store workZone in the right field\nworkersjj11$workZone = workersjj11$zone\n\n#check if there is only one worker or more than one in the hh\nworkersByhh11 = workersjj11 %>% group_by (hhid) %>% summarize (hhworkers = n())\n\n#and assign this value to the ppjj11 table\nwoorkersjj11 = merge(workersjj11, workersByhh11, by=\"hhid\")\n\n\n#select only what need for comparison\nwoorkersjj11  = woorkersjj11 %>% select(homeZone, workZone, id, hhworkers) \n\n#2050: filter to workers\nworkers50 = pp50 %>% filter(workplace>0)\n\n#merge pp and jj\nworkersjj50 = merge(x = pp50, jj50, by.x = \"workplace\", by.y = \"id\")\n\n#store workZone in the right place\nworkersjj50$workZone = workersjj50$zone\n\n#merge pp and hh\nworkersjjhh50 = merge(x = workersjj50, y = hh50, by.x = \"hhID\", by.y = \"id\")\n\n#store homeZone in the right place\nworkersjjhh50$homeZone = workersjjhh50$zone.y\n\n#check if there is only one worker or more than one in the hh\nworkersByhh50 = workersjjhh50 %>% group_by(hhID) %>% summarize (hhworkers = n())\n\n#and assign this value to the ppjj11 table\nworkersjjhh50 = merge(workersjjhh50, workersByhh50, by=\"hhID\")\n\n\n#select the useful columns only\nworkersjjhh50  = workersjjhh50 %>% select(homeZone, workZone, id, hhworkers) \n\n\n#calculate totals of employment by county\n#run the script analyze_region_selection.R first\n\nwoorkersjj11 = merge(woorkersjj11, zonesWithRegionName, by.x = \"workZone\", by.y = \"zone\")\nworkersjjhh50 = merge(workersjjhh50, zonesWithRegionName, by.x = \"workZone\", by.y = \"zone\")\n\nsummary11 = woorkersjj11 %>% group_by(work_region_name) %>% summarize(count = n())\nsummary50 = workersjjhh50 %>% group_by(work_region_name) %>% summarize(count = n())\n\nsummary11$year = 2011\nsummary50$year = 2050\n\ntotals11 = sum(summary11$count)\ntotals50 = sum(summary50$count)\n\nsummary11$percent = summary11$count / totals11\nsummary50$percent = summary50$count / totals11\n\nplot2 = ggplot(rbind(summary11, summary50), aes(y=count, x = work_region_name, group = as.factor(year)\n                                        , fill = as.factor(year))) +\n  geom_bar(stat = \"identity\", position=position_dodge()) + \n  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + \n  theme(legend.position = \"bottom\") + \n  xlab(\"Work region\") + ylab(\"Jobs\") + labs(fill = \"Year\")\n\nprint(plot2)\nggsave(file = paste(output_path, \"workers_\",scenario_name,\".png\", sep = \"\"),\n       plot =  plot2, height = 15, width = 10, units = \"cm\" )\n\n\n\n#read zonal data\nfileNameZones = \"C:/models/silo/muc/input/zoneSystem.csv\"\nzones = read.csv(fileNameZones)\n\n\n# \n# #Munich and Augsburg\n# counties = c(9162,9772)\n# \n# for (county in counties){\n#   \n#   #filter to Munich == 9162  (if Ausgburg just change to 9772, otherwise look at zone data frame)\n#   zonesMunich = zones %>% filter (ID_county == county)\n#   inMunich = zonesMunich$Zone\n#   \n#   #subset SP files to people working in the selected area\n#   sp11Muc = ppjj11 %>% filter(workZone %in% inMunich)\n#   sp50Muc = ppjjhh50 %>% filter(workZone %in% inMunich)\n#   \n#   #merge with zone file\n#   zones$homeZone = zones$Zone\n#   \n#   sp11Muc = merge(sp11Muc, zones, by= \"homeZone\")\n#   sp50Muc = merge(sp50Muc, zones, by= \"homeZone\")\n#   \n#   #group by home zone - here jur_name\n#   \n#   list11 = sp11Muc %>% group_by(JUR_NAME) %>% summarize(workers = n())\n#   list50 = sp50Muc %>% group_by(JUR_NAME) %>% summarize(workers = n())\n#   \n#   #add year column\n#   list11$year = 11\n#   list50$year = 50\n#   \n#   #join years\n#   list = rbind(list11, list50)\n#   \n#   #plot\n#   print(ggplot(list, aes(x=as.factor(JUR_NAME), y=workers,group = year, fill = as.factor(year))) +\n#           geom_bar(stat = \"identity\", position=position_dodge()) +\n#           theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +\n#           ggtitle(paste(\"home location of workers of \",county,sep=\"\")) + \n#           scale_y_continuous(labels = scales::comma)\n#   )\n# }\n}",
    "created" : 1532932152306.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3563793274",
    "id" : "3B48F425",
    "lastKnownWriteTime" : 1532932157,
    "last_content_update" : 1532932157146,
    "path" : "C:/code/silo_output_analyzer/analyze_sp.R",
    "project_path" : "analyze_sp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}