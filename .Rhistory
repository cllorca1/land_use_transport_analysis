commuteDistance = commuteDistance %>% group_by(scenario, year, transport) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("0_none", "A_none", "A_vot","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "AV+VOT", "AV+Parking", "no-AV+Transport congestion", "AV+Transport congestion")
scenario_colors = c("#000000", "#BABABA", "#C29D9D", "#BD4646","#000010", "#FF0000")
transport_model = c("no", "no", "no","no","yes", "yes")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$transport = transport_model[i]
this_satisfaction$transport = transport_model[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, transport) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenarios)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario")
View(commuteDistance)
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("0_none", "A_none", "A_vot","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "AV+VOT", "AV+Parking", "no-AV+Transport congestion", "AV+Transport congestion")
scenario_colors = c("#000000", "#BABABA", "#C29D9D", "#BD4646","#000010", "#FF0000")
transport_model = c("no", "no", "no","no","yes", "yes")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$transport = transport_model[i]
this_satisfaction$transport = transport_model[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, transport) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenario_labels)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Scenario")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "dotted"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "dashed"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "b"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "12"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "13"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario, linetype = transport)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario", linetype = "Transport model") +
scale_linetype_manual(values = c("solid", "21"))
scenarios = c("0_none", "A_none", "0_vot", "A_vot","0_parking_2","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "no-AV", "AV", "no-AV", "AV", "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000")
case = c("base", "base", "+VOT" ,"+VOT", "+Parking", "+Parking", "+Transport congestion", "Transport congestion")
cases = c("base", "base", "+VOT" ,"+VOT", "+Parking", "+Parking", "+Transport congestion", "Transport congestion")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$case = cases[i]
this_satisfaction$case = cases[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, transport) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("0_none", "A_none", "0_vot", "A_vot","0_parking_2","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "no-AV", "AV", "no-AV", "AV", "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000")
cases = c("base", "base", "+VOT" ,"+VOT", "+Parking", "+Parking", "+Transport congestion", "Transport congestion")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$case = cases[i]
this_satisfaction$case = cases[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, transport, case) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance = commuteDistance %>% group_by(scenario, year, case) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenario_labels)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case) +
scale_linetype_manual(values = c("solid", "21"))
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, plotly)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("0_none", "A_none", "0_vot", "A_vot","0_parking_2","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "no-AV", "AV", "no-AV", "AV", "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000", "#000000", "#FF0000")
cases = c("base", "base", "+VOT" ,"+VOT", "+Parking", "+Parking", "+Transport congestion", "+Transport congestion")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$case = cases[i]
this_satisfaction$case = cases[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, case) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case) +
scale_linetype_manual(values = c("solid", "21"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
commuteDistance$case = factor(commuteDistance$case,  c("base", "+VOT", "+Parking", "+Transport congestion"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case) +
scale_linetype_manual(values = c("solid", "21"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
scale_linetype_manual(values = c("solid", "21"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
theme(legend.position = "bottom")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
theme(legend.position = "bottom") +
scale_linetype_manual(values = c("solid", "21"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90))
scenario_colors = c("#FF0000", "#000000")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90))
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap, plotly, ggalluvial)
upper_folder = "c:/models/silo/muc/scenOutput/"
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap, plotly, ggalluvial)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
scenarios = c( "0_none", "A_none")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
scenarios = c("0_vot", "A_vot")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
scenarios = c("0_parking", "A_parking")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000","#FF0000")
scenarios = c("0_parking_2", "A_parking_2")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000","#FF0000")
scenarios = c("0_only_transport", "A_only_transport")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
modeChoice = data.frame()
scenarios = c( "0_none", "A_none")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
modeChoice = data.frame()
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenarios)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs2050 = summary_hhs %>% filter(year == 2050) %>% spread(scenario, workers)
ggplot(summary_hhs2050, aes(x= typehome, y=(`A_vot` - `0_vot`)*20/1000, fill = typehome)) +
geom_bar(position = "dodge", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(fill = "Home location") + ylim (-30,30)
ggplot(summary_hhs2050, aes(x= typehome, y=(AV - `no-AV`)*20/1000, fill = typehome)) +
geom_bar(position = "dodge", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(fill = "Home location") + ylim (-30,30)
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
ggsave("clipboard-10000k", width = 15, units = "cm", height = 10, scale = 1.5)
ggsave("clipboard-10000k", device = "bmp" , width = 15, units = "cm", height = 10, scale = 1.5)
ggsave("clipboard-10000k", device = "bmp" , width = 15, units = "cm", height = 10, scale = 1.5)
scenarios = c("0_vot", "A_vot")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs2050 = summary_hhs %>% filter(year == 2050) %>% spread(scenario, workers)
ggplot(summary_hhs2050, aes(x= typehome, y=(AV - `no-AV`)*20/1000, fill = typehome)) +
geom_bar(position = "dodge", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(fill = "Home location") + ylim (-30,30)
scenarios = c("0_parking", "A_parking")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000","#FF0000")
scenarios = c("0_parking_2", "A_parking_2")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000","#FF0000")
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs2050 = summary_hhs %>% filter(year == 2050) %>% spread(scenario, workers)
ggplot(summary_hhs2050, aes(x= typehome, y=(AV - `no-AV`)*20/1000, fill = typehome)) +
geom_bar(position = "dodge", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(fill = "Home location") + ylim (-30,30)
scenarios = c("0_only_transport", "A_only_transport")
scenario_labels = c( "no-AV", "AV")
scenario_colors = c("#000000", "#FF0000")
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
modeChoice = data.frame()
for (i in 1:length(scenarios)){
scenario_name = paste("AV", scenarios[i], sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario_labels[i]
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("home in Core city", "home in Medium city", "home in Town", "home in Rural area"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("work in Core city", "work in Medium city", "work in Town", "work in Rural area"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenario_labels)
color_areas = c("#a3a3a3", "#d07f63", "#ffd688", "#a4c1a1")
ggplot(summary_hhs %>% filter(year == 2050), aes(x= scenario, y=workers*20/1000, fill = typehome)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("scenario") + ylab("Share of workers") + labs(fill = "Home location")
summary_hhs2050 = summary_hhs %>% filter(year == 2050) %>% spread(scenario, workers)
ggplot(summary_hhs2050, aes(x= typehome, y=(AV - `no-AV`)*20/1000, fill = typehome)) +
geom_bar(position = "dodge", stat = "identity", color = "black") +
facet_grid(.~typejob, scales = "free") +
scale_fill_manual(values= color_areas) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(fill = "Home location") + ylim (-30,30)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, plotly)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("0_none", "A_none", "0_vot", "A_vot","0_parking_2","A_parking_2", "0_only_transport", "A_only_transport")
scenario_labels = c("no-AV", "AV", "no-AV", "AV", "no-AV", "AV", "no-AV", "AV")
cases = c("base", "base", "+VOT" ,"+VOT", "+Parking", "+Parking", "+Transport congestion", "+Transport congestion")
for (i in 1:length(scenarios)){
scenario_label = scenario_labels[i]
scenario = scenarios[i]
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario_label
this_satisfaction$scenario = scenario_label
this_commuteDistance$case = cases[i]
this_satisfaction$case = cases[i]
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
commuteDistance = commuteDistance %>% group_by(scenario, year, case) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
scenario_colors = c("#FF0000", "#000000")
commuteDistance$case = factor(commuteDistance$case,  c("base", "+VOT", "+Parking", "+Transport congestion"))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2)  + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario") +
facet_wrap(.~case, ncol = 4) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90))
