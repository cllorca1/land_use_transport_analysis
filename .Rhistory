plotThisRegionDefinition(by_region_district)
by_region_district = data%>%
group_by(name_count_dis) %>%
summarize(pop_emp = sum(Pop_Emp), zones = n())
plotThisRegionDefinition(by_region_district)
by_muni_district = data%>%
group_by(name_muni_dis) %>%
summarize(pop_emp = sum(Pop_Emp), zones = n())
by_muni_district = data%>%
group_by(name_muni_dist) %>%
summarize(pop_emp = sum(Pop_Emp), zones = n())
plotThisRegionDefinition(by_muni_district)
plotThisRegionDefinition = function(data, maxPop, maxZones){
bin_w = 100000
plot_pop = ggplot(data, aes(x=pop_emp)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,2e6), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_pop)
bin_w = 100
plot_zones = ggplot(data, aes(x=zones)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = 100) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,2e3), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_zones)
}
plotThisRegionDefinition = function(data, maxPop, maxZones){
bin_w = 100000
plot_pop = ggplot(data, aes(x=pop_emp)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxPop), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_pop)
bin_w = 100
plot_zones = ggplot(data, aes(x=zones)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = 100) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxZones), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_zones)
}
plotThisRegionDefinition(by_muni_district, 400000,500)
plotThisRegionDefinition(by_muni_district, 500000,500)
plotThisRegionDefinition = function(data, maxPop, maxZones){
bin_w = 100000
plot_pop = ggplot(data, aes(x=pop_emp)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxPop), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_pop)
bin_w = 100
plot_zones = ggplot(data, aes(x=zones)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = 100) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxZones), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_zones)
}
plotThisRegionDefinition(by_muni_district, 500000,500)
plotThisRegionDefinition(by_region_district)
plotThisRegionDefinition(by_region_district, 500000,500)
plotThisRegionDefinition = function(data, maxPop, maxZones){
bin_w = 25000
plot_pop = ggplot(data, aes(x=pop_emp)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxPop), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_pop)
bin_w = 25
plot_zones = ggplot(data, aes(x=zones)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = 100) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxZones), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_zones)
}
plotThisRegionDefinition(by_muni_district, 500000,500)
plotThisRegionDefinition = function(data, maxPop, maxZones, bins){
bin_w = maxPop/bins
plot_pop = ggplot(data, aes(x=pop_emp)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxPop), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_pop)
bin_w = maxZones/bins
plot_zones = ggplot(data, aes(x=zones)) +
geom_histogram(fill = "lightblue", color = "blue", binwidth = bin_w) +
theme_bw() +
scale_x_continuous(limits = c(-bin_w/2,maxZones), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
theme(plot.margin= unit(c(2,10,1,1), "mm"))
print(plot_zones)
}
plotThisRegionDefinition(by_muni_district, 500000,500, 30)
plotThisRegionDefinition(by_muni_district, 500000,500, 25)
plotThisRegionDefinition(by_region_district, 500000,500, 25)
plotThisRegionDefinition(by_region, 100000,100,25)
plotThisRegionDefinition(by_region, 100000,100,30)
plotThisRegionDefinition(by_region, 100000,100,20)
plotThisRegionDefinition(by_region, 100000,5000,25)
plotThisRegionDefinition(by_region, 200000,5000,25)
plotThisRegionDefinition(by_region, 200000,2000,25)
plotThisRegionDefinition(by_region, 2000000,2000,25)
plotThisRegionDefinition(by_region_district, 2000000,2000,25)
plotThisRegionDefinition(by_muni, 2000000,2000,25)
scenario_name = "base_no_transport"
subpath =  "base_no_transport"
scaled = F
source("c:/code/matsimScaling/siloAnalysis/readZonesAndRegions.R")
source("silo/results_reader.R")
source("silo/analyze_sp.R")
source("silo/spatial_reader.R")
output_path = "c:/projects/SILO/relocation/scenarios/"
read_results(output_path, subpath, scenario_name, scaled)
analyze_sp(output_path, subpath, scenario_name, scaled, F)
output_path = "c:/projects/SILO/relocation/scenarios/regional/"
regions = c("M체nchen-Landeshauptstadt","Augsburg","Eichst채tt","Dachau")
read_spatial(output_path, subpath, scenario_name, regions, scaled)
scenario_name = "base"
subpath =  "base"
scaled = F
source("c:/code/matsimScaling/siloAnalysis/readZonesAndRegions.R")
source("silo/results_reader.R")
source("silo/analyze_sp.R")
source("silo/spatial_reader.R")
output_path = "c:/projects/SILO/relocation/scenarios/"
read_results(output_path, subpath, scenario_name, scaled)
analyze_sp(output_path, subpath, scenario_name, scaled, F)
output_path = "c:/projects/SILO/relocation/scenarios/regional/"
regions = c("M체nchen-Landeshauptstadt","Augsburg","Eichst채tt","Dachau")
read_spatial(output_path, subpath, scenario_name, regions, scaled)
pacman::p_load(data.table, dplyr, ggplot2)
pacman::p_load(data.table, dplyr, ggplot2)
scenario = "zero"
path = "c:/models/silo/muc/scenOutput/"
path = paste(path, scenario, "/", sep = "")
years = c(2024,2037,2050)
fileEnding = "microData/trips.csv"
allYears = data.frame()
for (year in years){
dataThisYear = fread(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
fileEnding = "/microData/trips.csv"
allYears = data.frame()
for (year in years){
dataThisYear = fread(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
file_2011 = "c:/models/mito/muc/mitoMunich/scenOutput/base/2011/microData/trips.csv"
dataThisYear = fread(file_2011)
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = 2011
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
allYears = filter(allYears, mode != "null")
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light()
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=distance, group = mode, color = mode)) +
geom_line(size = 1) +
scale_color_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=time, group = mode, color = mode)) +
geom_line(size = 1) +
scale_color_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
distanceBins = seq(0,50,2)
for (year in years){
dataThisYear = fread(paste(path,year,fileEnding, sep = ""))
dataThisYear$distance_bin = cut(x=dataThisYear$distance, breaks = distanceBins)
summaryThisYear = dataThisYear %>% group_by(mode, distance_bin) %>% summarize(trips = n())
total_trips = nrow(dataThisYear)
summaryThisYear = summaryThisYear %>% filter(mode != "null")
print(
ggplot() +
geom_area(data = summaryThisYear, aes(x=distance_bin, y=trips, group = as.factor(mode), fill = as.factor(mode)), position = "fill") +
ggtitle(paste("Shares by distance in",year)) +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" ))
)
print(
ggplot(dataThisYear %>% filter(mode == "autoDriver"), aes(x=distance, color = as.factor(purpose))) +
geom_freqpoly(size = 1.5) +
ggtitle(paste("Distance distribution by purpose for car trips in",year))
)
print(
ggplot(dataThisYear %>% filter(mode == "autoDriver"), aes(x=distance)) +
geom_freqpoly(size = 1.5) +
ggtitle(paste("Distance distribution for car trips in",year))
)
}
install.packages("readr")
pacman::p_load(ggplot2, dplyr)
read_spatial = function(output_path, subpath, scenario_name, regions,scaled){
if(scaled){
path = "C:/models/silo/mucSmall/scenOutput/"
} else {
path = "C:/models/silo/muc/scenOutput/"
}
file_name = "resultFileSpatial1.csv"
raw = read.csv(paste(path,subpath,file_name,sep = "/"),
fill = T,
skip = 1,as.is = 1:21)
raw = raw %>% filter(autoAccessibility != "", autoAccessibility != "autoAccessibility")
zones  = unique(as.numeric(raw$Year2011))
years = 2011:2050
firstColumns = data.frame()
for(year in years){
thisYear = data.frame(zone = zones, year = year)
firstColumns = rbind(firstColumns, thisYear)
}
raw = cbind(firstColumns, raw)
raw = raw %>% mutate (validation = if_else(zone == as.numeric(Year2011), T, F))
summary(raw$validation)
data = raw %>% select(year, zone, autoAccessibility,
transitAccessibility ,
population,
households,
jobs) %>%
mutate(autoAccessibility = as.numeric(autoAccessibility)) %>%
mutate(transitAccessibility = as.numeric(transitAccessibility)) %>%
mutate(population = as.numeric(population)) %>%
mutate(households = as.numeric(households)) %>%
mutate(jobs = as.numeric(jobs))
data = merge(x= data, y = zonesWithRegionName, by = "zone")
data_region = data %>% group_by(year, region_name = work_region_name) %>% summarize(autoAccessibility = mean(autoAccessibility),
transitAccessibility = mean(transitAccessibility),
population = sum(population),
households = sum(households),
jobs = sum(jobs))
data_region = data_region %>%
filter(as.character(region_name) %in% regions)
plot5 = ggplot(data_region, aes(x=as.integer(year),
y = population,
color = region_name,
group = region_name)) +
ylab("Population") +
geom_line(size = 1) +
theme_light() +
theme(legend.position = "bottom") +
labs(color = "Region") +
xlab("Year")
print(plot5)
ggsave(file = paste(output_path,"pp_regional_",scenario_name,".png", sep = ""),
plot =  plot5, height = 15, width = 10, units = "cm" )
plot6 = ggplot(data_region, aes(x=as.integer(year),
y = autoAccessibility,
color = region_name,
group = region_name)) +
ylab("Auto accessibility") +
geom_line(size = 1) +
theme_light() +
theme(legend.position = "bottom") +
labs(color = "Region") +
xlab("Year")
#print(plot6)
ggsave(file = paste(output_path,"auto_access_regional_",scenario_name,".png", sep = ""),
plot =  plot6, height = 15, width = 10, units = "cm" )
plot7= ggplot(data_region, aes(x=as.integer(year),
y = jobs,
color = region_name,
group = region_name)) +
ylab("Jobs") +
geom_line(size = 1) +
theme_light() +
theme(legend.position = "bottom") +
labs(color = "Region") +
xlab("Year")
#print(plot7)
ggsave(file = paste(output_path,"jj_regional_",scenario_name,".png", sep = ""),
plot =  plot7, height = 15, width = 10, units = "cm" )
}
pacman::p_load(data.table, dplyr, ggplot2)
scenario = "zero"
path = "c:/models/silo/muc/scenOutput/"
path = paste(path, scenario, "/", sep = "")
years = c(2024,2037,2050)
fileEnding = "/microData/trips.csv"
allYears = data.frame()
for (year in years){
dataThisYear = readr::read.csv(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
allYears = data.frame()
for (year in years){
dataThisYear = readr::read_csv(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
pacman::p_load(data.table, dplyr, ggplot2)
scenario = "base_with_no_emp_no_transport"
path = "c:/models/silo/muc/scenOutput/"
path = paste(path, scenario, "/", sep = "")
years = c(2024,2037,2050)
fileEnding = "/microData/trips.csv"
allYears = data.frame()
for (year in years){
dataThisYear = fread(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
scenario_name = "base_with_no_emp_no_transport"
subpath =  "base_with_no_emp_no_transport"
scaled = F
source("c:/code/matsimScaling/siloAnalysis/readZonesAndRegions.R")
source("silo/results_reader.R")
source("silo/analyze_sp.R")
source("silo/spatial_reader.R")
output_path = "c:/projects/SILO/relocation/scenarios/"
read_results(output_path, subpath, scenario_name, scaled)
analyze_sp(output_path, subpath, scenario_name, scaled, F)
scenario_name = "zero"
subpath =  "zero"
scaled = F
source("c:/code/matsimScaling/siloAnalysis/readZonesAndRegions.R")
source("silo/results_reader.R")
source("silo/analyze_sp.R")
output_path = "c:/projects/SILO/relocation/scenarios/"
read_results(output_path, subpath, scenario_name, scaled)
source("silo/spatial_reader.R")
analyze_sp(output_path, subpath, scenario_name, scaled, F)
output_path = "c:/projects/SILO/relocation/scenarios/regional/"
regions = c("M체nchen-Landeshauptstadt","Augsburg","Eichst채tt","Dachau")
read_spatial(output_path, subpath, scenario_name, regions, scaled)
analyze_sp(output_path, subpath, scenario_name, scaled, F)
source("silo/analyze_sp.R")
scenario_name = "zero"
subpath =  "zero"
scaled = F
analyze_sp(output_path, subpath, scenario_name, scaled, F)
source("c:/code/matsimScaling/siloAnalysis/readZonesAndRegions.R")
source("silo/results_reader.R")
source("silo/analyze_sp.R")
source("silo/spatial_reader.R")
output_path = "c:/projects/SILO/relocation/scenarios/"
read_results(output_path, subpath, scenario_name, scaled)
output_path = "c:/projects/SILO/relocation/scenarios/regional/"
regions = c("M체nchen-Landeshauptstadt","Augsburg","Eichst채tt","Dachau")
analyze_sp(output_path, subpath, scenario_name, scaled, F)
pacman::p_load(data.table, dplyr, ggplot2)
scenario = "zero"
path = "c:/models/silo/muc/scenOutput/"
path = paste(path, scenario, "/", sep = "")
years = c(2024,2037,2050)
fileEnding = "/microData/trips.csv"
allYears = data.frame()
for (year in years){
dataThisYear = fread(paste(path,year,fileEnding, sep = ""))
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = year
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
}
file_2011 = "c:/models/silo/muc/scenOutput/mito_base/2012/microData/trips.csv"
dataThisYear = fread(file_2011)
summary = dataThisYear %>% group_by(purpose, mode) %>% summarize(count = n(),
distance = mean(distance),
time = mean(time_auto))
summary$year = 2011
summary[is.null(summary)] = "null"
summary[is.na(summary)] = 0
summary = as.data.frame(summary)
allYears = as.data.frame(rbind(allYears,summary))
allYears = filter(allYears, mode != "null")
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(position = "fill", stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light()
ggplot(allYears, aes(x=as.factor(year), y=count, fill = mode)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=distance, group = mode, color = mode)) +
geom_line(size = 1) +
scale_color_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
ggplot(allYears, aes(x=as.factor(year), y=time, group = mode, color = mode)) +
geom_line(size = 1) +
scale_color_manual(values = c("#64A0C8", "#003359", "#A5A5A5", "#FFC000","#E37222", "#74390F", "#92D050" )) +
theme_light() + facet_grid(.~purpose)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
scenario = "baseAV2"
av_ownership = read_csv(paste(upper_folder, scenario, "/siloResults/avOwnership.csv", sep  = ""))
av_ownership2 = av_ownership %>% gather(2:5, key = "variable", value = "value")
ggplot(av_ownership2 %>% filter(variable == "autos" | variable == "avs" | variable == "hhs"), aes(x= year, y = value, color = variable)) +
geom_line(size  =1) + geom_point(size = 2)
ggplot(av_ownership, aes(x= year, y = autos/hhs)) +
geom_line(size  =1) + geom_point(size = 2)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
scenario = "baseAV2_nt"
av_ownership = read_csv(paste(upper_folder, scenario, "/siloResults/avOwnership.csv", sep  = ""))
av_ownership2 = av_ownership %>% gather(2:5, key = "variable", value = "value")
ggplot(av_ownership2 %>% filter(variable == "autos" | variable == "avs" | variable == "hhs"), aes(x= year, y = value, color = variable)) +
geom_line(size  =1) + geom_point(size = 2)
ggplot(av_ownership, aes(x= year, y = autos/hhs)) +
geom_line(size  =1) + geom_point(size = 2)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
install.packages("readr")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
scenario = "baseAV2_nt"
av_ownership = read_csv(paste(upper_folder, scenario, "/siloResults/avOwnership.csv", sep  = ""))
library(readr)
detach("package:readr", unload = TRUE)
install.packages("vctrs")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
scenario = "baseAV2_nt"
av_ownership = read_csv(paste(upper_folder, scenario, "/siloResults/avOwnership.csv", sep  = ""))
av_ownership2 = av_ownership %>% gather(2:5, key = "variable", value = "value")
ggplot(av_ownership2 %>% filter(variable == "autos" | variable == "avs" | variable == "hhs"), aes(x= year, y = value, color = variable)) +
geom_line(size  =1) + geom_point(size = 2)
ggplot(av_ownership, aes(x= year, y = autos/hhs)) +
geom_line(size  =1) + geom_point(size = 2)
years = c(2011, 2020, 2030, 2040, 2050)
modal_share = data.frame()
for (year in years){
this_year_modal_share = read_csv(paste(upper_folder, scenario, "/", year, "/modeChoice/Munich_modalSplit.csv", sep = ""))
this_year_modal_share$year = year
modal_share = modal_share %>% bind_rows(this_year_modal_share)
rm(this_year_modal_share)
}
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5)
upper_folder = "c:/models/silo/muc/scenOutput/"
scenario = "baseAV3_nt"
modeChoice = read_csv(paste(upper_folder, scenario, "/siloResults/modeChoiceMicroData.csv", sep  = ""))
modeChoice$zeroAutoHh = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs ==0,  "hh-with-cvs", "hh-with-avs"))
ggplot(modeChoice, aes(x=year, fill = mode)) + geom_bar(stat = "count", position = "fill") +
facet_wrap(.~zeroAutoHh)
ggplot(modeChoice, aes(x=year, fill = mode)) + geom_bar(stat = "count", position = "stack") +
facet_wrap(.~zeroAutoHh)
ggplot(modeChoice, aes(x=year, fill = mode)) + geom_bar(stat = "count", position = "fill") +
facet_grid(parkingAtWork~zeroAutoHh)
ggplot(modeChoice, aes(x=year, fill = mode)) + geom_bar(stat = "count", position = "fill") +
facet_grid(parkingAtWork~.)
#link the distance on the network to the data set
source("c:/code/omx/api/r/omx2.r")
path_to_matrix = "c:/models/silo/muc/skims/skimsAllIntrazonal.omx"
matrix = readMatrixOMX(path_to_matrix, "distanceByTime")
modeChoice = modeChoice %>% rowwise() %>% mutate(distance = matrix[homeZone, workZone])
ggplot(modeChoice %>% filter(year == 2011), aes(x=distance, fill = mode)) + geom_area(stat = "bin", position = "fill")
