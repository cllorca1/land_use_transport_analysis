labs(fill = "Mode", color = "Mode")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
scenarios = c("A", "B", "C", "D", "E", "0")
modeChoice = data.frame()
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("from Core", "from Medium city", "from Town", "from Rural"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("to Core", "to Medium city", "to Town", "to Rural"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenarios)
scenario_colors = c("#FF0000", "#DE5959", "#D98282", "#C99797", "#C7B3B3","#000000")
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme_bw()
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
summary_hhs_by_home = modeChoice %>% group_by(year, typehome, scenario) %>% summarise(workers = n())
summary_hhs_by_home$typehome = factor(x = summary_hhs_by_home$typehome, levels = c(10,20,30,40), labels = c("from Core", "from Medium city", "from Town", "from Rural"))
summary_hhs_by_home$scenario = factor(summary_hhs_by_home$scenario, levels = scenarios)
ggplot(summary_hhs_by_home, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(.~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers") + labs(color = "Scenario")
ggplot(summary_hhs_by_home, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(.~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggplot(summary_hhs, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario") + theme_bw()
ggplot(summary_hhs, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome) +
scale_color_manual(values = scenario_colors) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_origin_type.pdf", width = 15, units = "cm", height = 13)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_origin_type.pdf", width = 15, units = "cm", height = 13, dpi = 300)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_origin_type.pdf", width = 15, units = "cm", height = 13, dpi = 400)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 13, dpi = 400)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 13, dpi = 72)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 13, scale = 0.75)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 13, scale = 1.5)
ggplot(summary_hhs, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 13, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_to_type.pdf", width = 15, units = "cm", height = 10, scale = 1.5)
summary_hhs_by_home = modeChoice %>% group_by(year, typehome, scenario) %>% summarise(workers = n())
summary_hhs_by_home$typehome = factor(x = summary_hhs_by_home$typehome, levels = c(10,20,30,40), labels = c("from Core", "from Medium city", "from Town", "from Rural"))
summary_hhs_by_home$scenario = factor(summary_hhs_by_home$scenario, levels = scenarios)
ggplot(summary_hhs_by_home, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(.~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme_bw(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggplot(summary_hhs_by_home, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(.~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme_bw() + theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_type.pdf", width = 15, units = "cm", height = 7, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_type.pdf", width = 15, units = "cm", height = 6, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/workers_from_type.pdf", width = 15, units = "cm", height = 5, scale = 1.5)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
scenarios = c("0", "A", "B", "C", "D", "E")
modeChoice = data.frame()
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_modeChoice = read_csv(paste(upper_folder, scenario_name, "/siloResults/modeChoiceMicroData.csv", sep  = ""))
this_modeChoice$scenario = scenario
modeChoice = modeChoice %>% bind_rows(this_modeChoice)
rm(this_modeChoice)
}
modeChoice$zeroAutoHh = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
color_modes = c("indianRed1", "indianRed4", "royalblue3")
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode")
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90))
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90), plot.margin=grid::unit(c(0,0,0,0), "mm"))
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90)) + theme(plot.margin=grid::unit(c(0,0,0,0), "mm"))
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90)) + theme(panel.grid = element_blank(), panel.background = element_blank())
scenarios = c("0", "E", "D", "C", "B", "A")
modeChoice = data.frame()
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_modeChoice = read_csv(paste(upper_folder, scenario_name, "/siloResults/modeChoiceMicroData.csv", sep  = ""))
this_modeChoice$scenario = scenario
modeChoice = modeChoice %>% bind_rows(this_modeChoice)
rm(this_modeChoice)
}
modeChoice$zeroAutoHh = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
color_modes = c("indianRed1", "indianRed4", "royalblue3")
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90))
modeChoice$scenario = factor(modeChoice$scenario, levels = scenarios)
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90))
ggsave("C:/projects/Papers/2020_cities/figs/modal_share_relocation", width = 15, units = "cm", height = 8, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/modal_share_relocation.pdf", width = 15, units = "cm", height = 8, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/modal_share_relocation.pdf", width = 15, units = "cm", height = 10, scale = 1.5)
#link the distance on the network to the data set
source("c:/code/omx/api/r/omx2.r")
path_to_matrix = "c:/models/silo/muc/skims/skimsAllIntrazonal.omx"
matrix = readMatrixOMX(path_to_matrix, "distanceByTime")
modeChoice = modeChoice %>% rowwise() %>% mutate(distance = matrix[homeZone, workZone])
vkt = modeChoice %>% group_by(scenario, year, mode) %>% summarize(n = n(), vkt = sum(distance), avg_distance = mean(distance))
ggplot(vkt %>% filter(mode != "pt"), aes(x = year, y= vkt * 20 *2 / 1e6, fill = mode, color = mode)) + geom_bar(stat = "identity") + facet_wrap(.~scenario) +
scale_fill_manual(values = color_modes) + scale_color_manual(values = color_modes) + xlab("Year") + ylab("Distance traveled (Million km)") +
labs(fill = "Mode", color = "Mode")
ggplot(vkt %>% filter(mode != "pt"), aes(x = year, y= vkt * 20 *2 / 1e6, fill = mode, color = mode)) + geom_bar(stat = "identity") + facet_wrap(.~scenario) +
scale_fill_manual(values = color_modes) + scale_color_manual(values = color_modes) + xlab("Year") + ylab("Distance traveled (Million km)") +
labs(fill = "Mode", color = "Mode") + theme_bw() + theme(axis.text.x = element_text(angle = 90))
ggplot(vkt %>% filter(mode != "pt"), aes(x = year, y= vkt * 20 *2 / 1e9, fill = mode, color = mode)) + geom_bar(stat = "identity") + facet_wrap(.~scenario) +
scale_fill_manual(values = color_modes) + scale_color_manual(values = color_modes) + xlab("Year") +
ylab("Distance traveled (10E9 km)") +
labs(fill = "Mode", color = "Mode") + theme_bw() + theme(axis.text.x = element_text(angle = 90))
ggsave("C:/projects/Papers/2020_cities/figs/VKT.pdf", width = 15, units = "cm", height = 10, scale = 1.5)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
scenarios = c("A", "B", "C", "D", "E", "0_t")
modeChoice = data.frame()
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
for (year in years){
this_year_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  = ""))
this_year_data$year = year
this_year_data$scenario = scenario
modeChoice = modeChoice %>% bind_rows(this_year_data)
rm(this_year_data)
}
}
modeChoice$hh_type = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("homeZone" = "id"))
modeChoice = modeChoice %>% left_join(zoneTypes, by = c("jobZone" = "id"), suffix = c("home", "job"))
summary_hhs = modeChoice %>% group_by(year, typehome, typejob, scenario) %>% summarise(workers = n())
summary_hhs$typehome = factor(x = summary_hhs$typehome, levels = c(10,20,30,40), labels = c("from Core", "from Medium city", "from Town", "from Rural"))
summary_hhs$typejob = factor(x = summary_hhs$typejob, levels = c(10,20,30,40), labels = c("to Core", "to Medium city", "to Town", "to Rural"))
summary_hhs$scenario = factor(summary_hhs$scenario, levels = scenarios)
scenario_colors = c("#FF0000", "#DE5959", "#D98282", "#C99797", "#C7B3B3","#000000")
ggplot(summary_hhs, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(typejob~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
summary_hhs_by_home = modeChoice %>% group_by(year, typehome, scenario) %>% summarise(workers = n())
summary_hhs_by_home$typehome = factor(x = summary_hhs_by_home$typehome, levels = c(10,20,30,40), labels = c("from Core", "from Medium city", "from Town", "from Rural"))
summary_hhs_by_home$scenario = factor(summary_hhs_by_home$scenario, levels = scenarios)
ggplot(summary_hhs_by_home, aes(x=year, y=workers*20/1000, color = scenario)) +
geom_line(size  =1) +
facet_grid(.~typehome, scales = "free") +
scale_color_manual(values = scenario_colors) +
theme_bw() + theme(axis.text.x = element_text(angle = 90)) +
xlab("Year") + ylab("Number of workers (thousands)") + labs(color = "Scenario")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
summary = data.frame()
scenarios = c("0_t", "A", "B", "C", "D", "E")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
for (year in years){
workers_micro_data = read_csv(paste(upper_folder, scenario_name, "/siloResults/avOwnershipByHh_", year, ".csv", sep  =""))
workers_micro_data$isAvHh = if_else(workers_micro_data$avs > 0, "AV", if_else(workers_micro_data$autos> 0, "CV-only", "no-car"))
# p = ggplot(workers_micro_data, aes(x= timeCar, group = isAvHh, color = as.factor(isAvHh), ..density..)) +
#   geom_freqpoly(size = 1) + ggtitle(year)
# print(p)
#
workers = nrow(workers_micro_data)
hh_with_workers = length(unique(workers_micro_data$household))
hh = workers_micro_data %>% select(household, isAvHh, timeCar)
hh = hh[!duplicated(hh$household),]
hh_with_avs = nrow(hh %>% filter(isAvHh == "AV"))
hh_with_cvs = nrow(hh %>% filter(isAvHh == "CV-only"))
time_hh_with_cvs = mean((hh %>% filter(isAvHh == "CV-only"))$timeCar)
time_hh_with_avs = mean((hh %>% filter(isAvHh == "AV"))$timeCar)
time_hh_without_cars = mean((hh %>% filter(isAvHh == "no-car"))$timeCar)
row = data.frame(year, scenario, workers, hh_with_workers, hh_with_avs,hh_with_cvs,time_hh_with_cvs,time_hh_with_avs,time_hh_without_cars)
summary = summary %>% bind_rows(row)
}
}
summary$hh_without_cars = summary$hh_with_workers - summary$hh_with_avs - summary$hh_with_cvs
summary2 = summary %>% gather(c(hh_with_avs, hh_with_cvs, hh_without_cars), key  ="variable", value = "value")
ggplot(summary2, aes(x= year, y = value, color = variable)) + geom_line(size =1) + geom_point(size = 2) + facet_wrap(.~scenario)
ggplot(summary2 %>% filter(variable != "hh_with_workers", variable != "workers"),
aes(x= year, y = value, fill = variable)) + geom_bar(stat = "identity", position = "fill") + facet_wrap(.~scenario)
summary2_only_av = summary2 %>% filter(variable == "hh_with_avs")
ggplot(summary2_only_av, aes(x= year, y = value/hh_with_workers * 100, color = scenario)) + geom_line(size =1) + geom_point(size = 2)
summary3 = summary %>% gather(c(time_hh_with_avs, time_hh_with_cvs, time_hh_without_cars), key  ="variable", value = "value")
ggplot(summary3, aes(x= year, y = value, color = variable)) + geom_line(size =1) + geom_point(size = 2) + facet_wrap(.~scenario)
color_hh_types = c("indianRed1", "indianRed4", "royalblue3")
ggplot(summary3 %>% filter(scenario == "0" | scenario == "A"), aes(x= year, y = value, color = variable)) +
geom_line(size =1) + geom_point(size = 2) + facet_wrap(.~scenario) + scale_color_manual(values = color_hh_types) +
ylab("average commute time")
ggplot(summary3 %>% filter(scenario == "0_t" | scenario == "A"), aes(x= year, y = value, color = variable)) +
geom_line(size =1) + geom_point(size = 2) + facet_wrap(.~scenario) + scale_color_manual(values = color_hh_types) +
ylab("average commute time")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr, rhdf5, sf, tmap)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
scenarios = c("0_t", "E", "D", "C", "B", "A")
modeChoice = data.frame()
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_modeChoice = read_csv(paste(upper_folder, scenario_name, "/siloResults/modeChoiceMicroData.csv", sep  = ""))
this_modeChoice$scenario = scenario
modeChoice = modeChoice %>% bind_rows(this_modeChoice)
rm(this_modeChoice)
}
modeChoice$zeroAutoHh = if_else(modeChoice$autos == 0, "zero-autos", if_else(modeChoice$avs == 0 ,  "hh-with-cvs", "hh-with-avs"))
color_modes = c("indianRed1", "indianRed4", "royalblue3")
modeChoice$scenario = factor(modeChoice$scenario, levels = scenarios)
ggplot(modeChoice, aes(x=year, fill = mode, color = mode)) + geom_bar(stat = "count", position = "fill") +
scale_fill_manual(values= color_modes) + scale_color_manual(values= color_modes) + facet_wrap(.~scenario) +
xlab("Year") + ylab("Share") + labs(fill = "Mode", color = "Mode") +
theme_bw() + theme(axis.text.x = element_text(angle = 90))
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
scenarios = c("0_t", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = data.frame()
scenarios = c("0_t", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) + geom_line(size = 1)
commuteDistance = data.frame()
scenarios = c("0_t", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) + geom_line(size = 1)
commuteDistance = data.frame()
scenarios = c("0_t", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
ggplot(commuteDistance, aes(x=year, y= time, color = region)) + geom_line(size = 1) + facet_wrap(.~scenario)
ggplot(commuteDistance, aes(x=year, y= time, color = as.factor(region), group = region)) + geom_line(size = 1) + facet_wrap(.~scenario)
ggplot(commuteDistance, aes(x=year, y= time, color = as.factor(region), group = region)) +
geom_line(size = 1) + facet_wrap(.~scenario) + theme(legend.position = "none")
geom_line(size = 1)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario) +
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)
scenarios = c("0_t", "0", "A")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
scenarios = c("0_t", "0", "A")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)
commuteDistance = data.frame()
scenarios = c("0_t", "0", "A", "B", "C", "D", "E")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)  + ylim(0,40)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)  + ylim(0,60)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
scenarios = c("0", "A", "B", "C", "D", "E")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)  + ylim(0,60)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1)  + ylim(0,40)
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenarios)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
scenarios = c("A", "B", "C", "D", "E", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenarios)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40)
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = mean(time, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenarios)
scenario_colors = c("#FF0000", "#DE5959", "#D98282", "#C99797", "#C7B3B3","#000000")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40) + scale_color_manual(values= scenario_colors)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 2) + ylim(0,40) + scale_color_manual(values= scenario_colors)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40) + scale_color_manual(values= scenario_colors)
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40) + scale_color_manual(values= scenario_colors) + theme_bw()
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40) + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario")
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
scenarios = c("A", "B", "C", "D", "E", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
thisHhs = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = thisHhs %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
}
View(this_commuteDistance)
commuteDistance = commuteDistance %>% group_by(scenario, year) %>% summarize(time = weighted.mean(time, hh, na.rm = T))
commuteDistance$scenario = factor(commuteDistance$scenario, levels = scenarios)
scenario_colors = c("#FF0000", "#DE5959", "#D98282", "#C99797", "#C7B3B3","#000000")
ggplot(commuteDistance, aes(x=year, y= time, color = scenario)) +
geom_line(size = 1) + ylim(0,40) + scale_color_manual(values= scenario_colors) + theme_bw() +
xlab("Year") + ylab("Average commute time (measured as time by car) (min)") + labs(color = "Scenario")
ggsave("C:/projects/Papers/2020_cities/figs/commuteTime.pdf", width = 15, units = "cm", height = 10, scale = 1.5)
years = 2011:2050
initialYears = c(2025, 2030, 2035, 2040, 2045, 2050)
scenarios = c("A", "B", "C", "D", "E", "0")
time_to_equal_price = 15
df = data.frame()
for (i in 1:length(scenarios)){
initialYear = initialYears[i]
equalPriceYear = initialYear + 15
scenario = scenarios[i]
for (year in years){
if (year < initialYear){
ratio = 10 #/high ratio to avoid the probability of switching to autonomous before 2020
} else {
ratio = max(c(10 + (year - initialYear)/(equalPriceYear - initialYear)*(1-10) , 1))
}
row = list(year = year, scenario = scenario, ratio = ratio)
df = df %>% bind_rows(row)
}
}
df$scenario = factor(df$scenario, levels = scenarios)
scenario_colors = c("#FF0000", "#DE5959", "#D98282", "#C99797", "#C7B3B3","#000000")
ggplot(df, aes(x= year, y = ratio, color = scenario)) + geom_line(size = 2) + ylim(0,10) +
ylab("Ratio between AV and CV purchase costs") + xlab("Year") + theme_bw() + labs(color = "Scenario") + scale_color_manual(values = scenario_colors)
ggsave("C:/projects/Papers/2020_cities/figs/av_scenarios", width = 15, units = "cm", height = 10, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/av_scenarios.pdf, width = 15, units = "cm", height = 10, scale = 1.5)
ggsave("C:/projects/Papers/2020_cities/figs/av_scenarios.pdf", width = 15, units = "cm", height = 10, scale = 1.5)
pacman::p_load(readr, dplyr, data.table, ggplot2, tidyr)
upper_folder = "c:/models/silo/muc/scenOutput/"
years = c(2011, 2020, 2030, 2040, 2050)
commuteDistance = data.frame()
satisfaction = data.frame()
scenarios = c("A", "B", "C", "D", "E", "0")
for (scenario in scenarios){
scenario_name = paste("AV", scenario, sep = "")
this_commuteDistance = read_csv(paste(upper_folder, scenario_name, "/siloResults/commutingDistance.csv", sep = ""))
this_satisfaction = read_csv(paste(upper_folder, scenario_name, "/siloResults/hhSatisfactionByRegion.csv", sep = ""))
thisHhs = this_satisfaction %>% group_by(year, region) %>% summarize(hh = sum(hh_count))
this_commuteDistance = this_commuteDistance %>% left_join(thisHhs, by=c("year", "region"))
this_commuteDistance$scenario = scenario
this_satisfaction$scenario = scenario
commuteDistance = commuteDistance %>% bind_rows(this_commuteDistance)
satisfaction = satisfaction %>% bind_rows(this_satisfaction)
}
zoneTypes = read_csv("c:/models/silo/muc/input/zoneSystem.csv")
zoneTypes = zoneTypes %>% select(id = Zone, area = Area, type = BBSR_Type)
satisfaction = satisfaction %>% lleft_join(zzoneTypes, by = c("zone" = "id"))
satisfaction = satisfaction %>% left_join(zzoneTypes, by = c("zone" = "id"))
satisfaction = satisfaction %>% left_join(zoneTypes, by = c("zone" = "id"))
satisfaction$type = factor(x = satisfaction$type, levels = c(10,20,30,40), labels = c("Core", "Medium city", "Town", "Rural"))
satisfaction_by_type = satisfaction %>% group_by(scenario, year, type) %>% summarise(satisfaction = weighted.mean(hh_ave_satisfaction, hh_count))
View(satisfaction_by_type)
ggplot(satisfaction_by_type, aes(x=year, y = satisfaction, color = scenario)) + geom_line(size = 1) + facet_wrap(.~type)
satisfaction_by_type$scenario = factor(satisfaction_by_type$scenario, levels = scenarios)
ggplot(satisfaction_by_type, aes(x=year, y = satisfaction, color = scenario)) +
geom_line(size = 1) + facet_wrap(.~type) + scale_color_manual(values = scenario_colors)
ggplot(satisfaction_by_type, aes(x=year, y = satisfaction, color = type)) +
geom_line(size = 1) + facet_wrap(.~scenario)
